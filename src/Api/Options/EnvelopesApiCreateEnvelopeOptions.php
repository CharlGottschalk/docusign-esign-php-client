<?php

declare(strict_types=1);

/**
 * EnvelopesApiCreateEnvelopeOptions.
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  DocuSign\eSign
 * @author   Swagger Codegen team <apihelp@docusign.com>
 * @license  The DocuSign eSignature Ruby Client SDK is licensed under the MIT License.
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2.1
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DocuSign\eSign\Api\Options;


/**
 * EnvelopesApiCreateEnvelopeOptions Class Doc Comment
 *
 * @category Class
 * @package  DocuSign\eSign
 * @author   Swagger Codegen team <apihelp@docusign.com>
 * @license  The DocuSign eSignature Ruby Client SDK is licensed under the MIT License.
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EnvelopesApiCreateEnvelopeOptions
{
    /**
      * $cdse_mode 
      * @var ?string
      */
    protected ?string $cdse_mode = null;

    /**
     * Gets cdse_mode
     *
     * @return ?string
     */
    public function getCdseMode(): ?string
    {
        return $this->cdse_mode;
    }

    /**
     * Sets cdse_mode
     * @param ?string $cdse_mode 
     *
     * @return self
     */
    public function setCdseMode(?string $cdse_mode): self
    {
        $this->cdse_mode = $cdse_mode;
        return $this;
    }
    /**
      * $change_routing_order 
      * @var ?string
      */
    protected ?string $change_routing_order = null;

    /**
     * Gets change_routing_order
     *
     * @return ?string
     */
    public function getChangeRoutingOrder(): ?string
    {
        return $this->change_routing_order;
    }

    /**
     * Sets change_routing_order
     * @param ?string $change_routing_order 
     *
     * @return self
     */
    public function setChangeRoutingOrder(?string $change_routing_order): self
    {
        $this->change_routing_order = $change_routing_order;
        return $this;
    }
    /**
      * $completed_documents_only If set to true then we want to set the sourceEnvelopeId to indicate that this is a\"forward\" envelope action
      * @var ?string
      */
    protected ?string $completed_documents_only = null;

    /**
     * Gets completed_documents_only
     *
     * @return ?string
     */
    public function getCompletedDocumentsOnly(): ?string
    {
        return $this->completed_documents_only;
    }

    /**
     * Sets completed_documents_only
     * @param ?string $completed_documents_only If set to true then we want to set the sourceEnvelopeId to indicate that this is a\"forward\" envelope action
     *
     * @return self
     */
    public function setCompletedDocumentsOnly(?string $completed_documents_only): self
    {
        $this->completed_documents_only = $completed_documents_only;
        return $this;
    }
    /**
      * $merge_roles_on_draft When set to **true**, merges template roles and remove empty recipients when you create an envelope with multiple templates.
      * @var ?string
      */
    protected ?string $merge_roles_on_draft = null;

    /**
     * Gets merge_roles_on_draft
     *
     * @return ?string
     */
    public function getMergeRolesOnDraft(): ?string
    {
        return $this->merge_roles_on_draft;
    }

    /**
     * Sets merge_roles_on_draft
     * @param ?string $merge_roles_on_draft When set to **true**, merges template roles and remove empty recipients when you create an envelope with multiple templates.
     *
     * @return self
     */
    public function setMergeRolesOnDraft(?string $merge_roles_on_draft): self
    {
        $this->merge_roles_on_draft = $merge_roles_on_draft;
        return $this;
    }
    /**
      * $tab_label_exact_matches 
      * @var ?string
      */
    protected ?string $tab_label_exact_matches = null;

    /**
     * Gets tab_label_exact_matches
     *
     * @return ?string
     */
    public function getTabLabelExactMatches(): ?string
    {
        return $this->tab_label_exact_matches;
    }

    /**
     * Sets tab_label_exact_matches
     * @param ?string $tab_label_exact_matches 
     *
     * @return self
     */
    public function setTabLabelExactMatches(?string $tab_label_exact_matches): self
    {
        $this->tab_label_exact_matches = $tab_label_exact_matches;
        return $this;
    }
}
