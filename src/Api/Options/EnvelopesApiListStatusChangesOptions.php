<?php

declare(strict_types=1);

/**
 * EnvelopesApiListStatusChangesOptions.
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  DocuSign\eSign
 * @author   Swagger Codegen team <apihelp@docusign.com>
 * @license  The DocuSign eSignature Ruby Client SDK is licensed under the MIT License.
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2.1
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DocuSign\eSign\Api\Options;


/**
 * EnvelopesApiListStatusChangesOptions Class Doc Comment
 *
 * @category Class
 * @package  DocuSign\eSign
 * @author   Swagger Codegen team <apihelp@docusign.com>
 * @license  The DocuSign eSignature Ruby Client SDK is licensed under the MIT License.
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EnvelopesApiListStatusChangesOptions
{
    /**
      * $ac_status Specifies the Authoritative Copy Status for the envelopes. The possible values are: Unknown, Original, Transferred, AuthoritativeCopy, AuthoritativeCopyExportPending, AuthoritativeCopyExported, DepositPending, Deposited, DepositedEO, or DepositFailed.
      * @var ?string
      */
    protected ?string $ac_status = null;

    /**
     * Gets ac_status
     *
     * @return ?string
     */
    public function getAcStatus(): ?string
    {
        return $this->ac_status;
    }

    /**
     * Sets ac_status
     * @param ?string $ac_status Specifies the Authoritative Copy Status for the envelopes. The possible values are: Unknown, Original, Transferred, AuthoritativeCopy, AuthoritativeCopyExportPending, AuthoritativeCopyExported, DepositPending, Deposited, DepositedEO, or DepositFailed.
     *
     * @return self
     */
    public function setAcStatus(?string $ac_status): self
    {
        $this->ac_status = $ac_status;
        return $this;
    }
    /**
      * $block 
      * @var ?string
      */
    protected ?string $block = null;

    /**
     * Gets block
     *
     * @return ?string
     */
    public function getBlock(): ?string
    {
        return $this->block;
    }

    /**
     * Sets block
     * @param ?string $block 
     *
     * @return self
     */
    public function setBlock(?string $block): self
    {
        $this->block = $block;
        return $this;
    }
    /**
      * $cdse_mode 
      * @var ?string
      */
    protected ?string $cdse_mode = null;

    /**
     * Gets cdse_mode
     *
     * @return ?string
     */
    public function getCdseMode(): ?string
    {
        return $this->cdse_mode;
    }

    /**
     * Sets cdse_mode
     * @param ?string $cdse_mode 
     *
     * @return self
     */
    public function setCdseMode(?string $cdse_mode): self
    {
        $this->cdse_mode = $cdse_mode;
        return $this;
    }
    /**
      * $continuation_token 
      * @var ?string
      */
    protected ?string $continuation_token = null;

    /**
     * Gets continuation_token
     *
     * @return ?string
     */
    public function getContinuationToken(): ?string
    {
        return $this->continuation_token;
    }

    /**
     * Sets continuation_token
     * @param ?string $continuation_token 
     *
     * @return self
     */
    public function setContinuationToken(?string $continuation_token): self
    {
        $this->continuation_token = $continuation_token;
        return $this;
    }
    /**
      * $count 
      * @var ?string
      */
    protected ?string $count = null;

    /**
     * Gets count
     *
     * @return ?string
     */
    public function getCount(): ?string
    {
        return $this->count;
    }

    /**
     * Sets count
     * @param ?string $count 
     *
     * @return self
     */
    public function setCount(?string $count): self
    {
        $this->count = $count;
        return $this;
    }
    /**
      * $custom_field This specifies the envelope custom field name and value searched for in the envelope information. The value portion of the query can use partial strings by adding '%' (percent sign) around the custom field query value.   Example 1: If you have an envelope custom field called \"Region\" and you want to search for all envelopes where the value is \"West\" you would use the query: `?custom_field=Region=West`.   Example 2: To search for envelopes where the `ApplicationID` custom field has the value or partial value of \"DocuSign\" in field, the query would be: `?custom_field=ApplicationId=%DocuSign%` This would find envelopes where the custom field value is \"DocuSign for Salesforce\" or \"DocuSign envelope.\"
      * @var ?string
      */
    protected ?string $custom_field = null;

    /**
     * Gets custom_field
     *
     * @return ?string
     */
    public function getCustomField(): ?string
    {
        return $this->custom_field;
    }

    /**
     * Sets custom_field
     * @param ?string $custom_field This specifies the envelope custom field name and value searched for in the envelope information. The value portion of the query can use partial strings by adding '%' (percent sign) around the custom field query value.   Example 1: If you have an envelope custom field called \"Region\" and you want to search for all envelopes where the value is \"West\" you would use the query: `?custom_field=Region=West`.   Example 2: To search for envelopes where the `ApplicationID` custom field has the value or partial value of \"DocuSign\" in field, the query would be: `?custom_field=ApplicationId=%DocuSign%` This would find envelopes where the custom field value is \"DocuSign for Salesforce\" or \"DocuSign envelope.\"
     *
     * @return self
     */
    public function setCustomField(?string $custom_field): self
    {
        $this->custom_field = $custom_field;
        return $this;
    }
    /**
      * $email 
      * @var ?string
      */
    protected ?string $email = null;

    /**
     * Gets email
     *
     * @return ?string
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * Sets email
     * @param ?string $email 
     *
     * @return self
     */
    public function setEmail(?string $email): self
    {
        $this->email = $email;
        return $this;
    }
    /**
      * $envelope_ids 
      * @var ?string
      */
    protected ?string $envelope_ids = null;

    /**
     * Gets envelope_ids
     *
     * @return ?string
     */
    public function getEnvelopeIds(): ?string
    {
        return $this->envelope_ids;
    }

    /**
     * Sets envelope_ids
     * @param ?string $envelope_ids 
     *
     * @return self
     */
    public function setEnvelopeIds(?string $envelope_ids): self
    {
        $this->envelope_ids = $envelope_ids;
        return $this;
    }
    /**
      * $exclude 
      * @var ?string
      */
    protected ?string $exclude = null;

    /**
     * Gets exclude
     *
     * @return ?string
     */
    public function getExclude(): ?string
    {
        return $this->exclude;
    }

    /**
     * Sets exclude
     * @param ?string $exclude 
     *
     * @return self
     */
    public function setExclude(?string $exclude): self
    {
        $this->exclude = $exclude;
        return $this;
    }
    /**
      * $folder_ids 
      * @var ?string
      */
    protected ?string $folder_ids = null;

    /**
     * Gets folder_ids
     *
     * @return ?string
     */
    public function getFolderIds(): ?string
    {
        return $this->folder_ids;
    }

    /**
     * Sets folder_ids
     * @param ?string $folder_ids 
     *
     * @return self
     */
    public function setFolderIds(?string $folder_ids): self
    {
        $this->folder_ids = $folder_ids;
        return $this;
    }
    /**
      * $folder_types 
      * @var ?string
      */
    protected ?string $folder_types = null;

    /**
     * Gets folder_types
     *
     * @return ?string
     */
    public function getFolderTypes(): ?string
    {
        return $this->folder_types;
    }

    /**
     * Sets folder_types
     * @param ?string $folder_types 
     *
     * @return self
     */
    public function setFolderTypes(?string $folder_types): self
    {
        $this->folder_types = $folder_types;
        return $this;
    }
    /**
      * $from_date The date/time setting that specifies the date/time when the request begins checking for status changes for envelopes in the account.  This is required unless 'envelopeId's are used.
      * @var ?string
      */
    protected ?string $from_date = null;

    /**
     * Gets from_date
     *
     * @return ?string
     */
    public function getFromDate(): ?string
    {
        return $this->from_date;
    }

    /**
     * Sets from_date
     * @param ?string $from_date The date/time setting that specifies the date/time when the request begins checking for status changes for envelopes in the account.  This is required unless 'envelopeId's are used.
     *
     * @return self
     */
    public function setFromDate(?string $from_date): self
    {
        $this->from_date = $from_date;
        return $this;
    }
    /**
      * $from_to_status This is the status type checked for in the `from_date`/`to_date` period. If `changed` is specified, then envelopes that changed status during the period are found. If for example, `created` is specified, then envelopes created during the period are found. Default is `changed`.   Possible values are: Voided, Changed, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.
      * @var ?string
      */
    protected ?string $from_to_status = null;

    /**
     * Gets from_to_status
     *
     * @return ?string
     */
    public function getFromToStatus(): ?string
    {
        return $this->from_to_status;
    }

    /**
     * Sets from_to_status
     * @param ?string $from_to_status This is the status type checked for in the `from_date`/`to_date` period. If `changed` is specified, then envelopes that changed status during the period are found. If for example, `created` is specified, then envelopes created during the period are found. Default is `changed`.   Possible values are: Voided, Changed, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.
     *
     * @return self
     */
    public function setFromToStatus(?string $from_to_status): self
    {
        $this->from_to_status = $from_to_status;
        return $this;
    }
    /**
      * $include 
      * @var ?string
      */
    protected ?string $include = null;

    /**
     * Gets include
     *
     * @return ?string
     */
    public function getInclude(): ?string
    {
        return $this->include;
    }

    /**
     * Sets include
     * @param ?string $include 
     *
     * @return self
     */
    public function setInclude(?string $include): self
    {
        $this->include = $include;
        return $this;
    }
    /**
      * $include_purge_information 
      * @var ?string
      */
    protected ?string $include_purge_information = null;

    /**
     * Gets include_purge_information
     *
     * @return ?string
     */
    public function getIncludePurgeInformation(): ?string
    {
        return $this->include_purge_information;
    }

    /**
     * Sets include_purge_information
     * @param ?string $include_purge_information 
     *
     * @return self
     */
    public function setIncludePurgeInformation(?string $include_purge_information): self
    {
        $this->include_purge_information = $include_purge_information;
        return $this;
    }
    /**
      * $intersecting_folder_ids 
      * @var ?string
      */
    protected ?string $intersecting_folder_ids = null;

    /**
     * Gets intersecting_folder_ids
     *
     * @return ?string
     */
    public function getIntersectingFolderIds(): ?string
    {
        return $this->intersecting_folder_ids;
    }

    /**
     * Sets intersecting_folder_ids
     * @param ?string $intersecting_folder_ids 
     *
     * @return self
     */
    public function setIntersectingFolderIds(?string $intersecting_folder_ids): self
    {
        $this->intersecting_folder_ids = $intersecting_folder_ids;
        return $this;
    }
    /**
      * $last_queried_date 
      * @var ?string
      */
    protected ?string $last_queried_date = null;

    /**
     * Gets last_queried_date
     *
     * @return ?string
     */
    public function getLastQueriedDate(): ?string
    {
        return $this->last_queried_date;
    }

    /**
     * Sets last_queried_date
     * @param ?string $last_queried_date 
     *
     * @return self
     */
    public function setLastQueriedDate(?string $last_queried_date): self
    {
        $this->last_queried_date = $last_queried_date;
        return $this;
    }
    /**
      * $order 
      * @var ?string
      */
    protected ?string $order = null;

    /**
     * Gets order
     *
     * @return ?string
     */
    public function getOrder(): ?string
    {
        return $this->order;
    }

    /**
     * Sets order
     * @param ?string $order 
     *
     * @return self
     */
    public function setOrder(?string $order): self
    {
        $this->order = $order;
        return $this;
    }
    /**
      * $order_by 
      * @var ?string
      */
    protected ?string $order_by = null;

    /**
     * Gets order_by
     *
     * @return ?string
     */
    public function getOrderBy(): ?string
    {
        return $this->order_by;
    }

    /**
     * Sets order_by
     * @param ?string $order_by 
     *
     * @return self
     */
    public function setOrderBy(?string $order_by): self
    {
        $this->order_by = $order_by;
        return $this;
    }
    /**
      * $powerformids 
      * @var ?string
      */
    protected ?string $powerformids = null;

    /**
     * Gets powerformids
     *
     * @return ?string
     */
    public function getPowerformids(): ?string
    {
        return $this->powerformids;
    }

    /**
     * Sets powerformids
     * @param ?string $powerformids 
     *
     * @return self
     */
    public function setPowerformids(?string $powerformids): self
    {
        $this->powerformids = $powerformids;
        return $this;
    }
    /**
      * $query_budget 
      * @var ?string
      */
    protected ?string $query_budget = null;

    /**
     * Gets query_budget
     *
     * @return ?string
     */
    public function getQueryBudget(): ?string
    {
        return $this->query_budget;
    }

    /**
     * Sets query_budget
     * @param ?string $query_budget 
     *
     * @return self
     */
    public function setQueryBudget(?string $query_budget): self
    {
        $this->query_budget = $query_budget;
        return $this;
    }
    /**
      * $requester_date_format 
      * @var ?string
      */
    protected ?string $requester_date_format = null;

    /**
     * Gets requester_date_format
     *
     * @return ?string
     */
    public function getRequesterDateFormat(): ?string
    {
        return $this->requester_date_format;
    }

    /**
     * Sets requester_date_format
     * @param ?string $requester_date_format 
     *
     * @return self
     */
    public function setRequesterDateFormat(?string $requester_date_format): self
    {
        $this->requester_date_format = $requester_date_format;
        return $this;
    }
    /**
      * $search_text 
      * @var ?string
      */
    protected ?string $search_text = null;

    /**
     * Gets search_text
     *
     * @return ?string
     */
    public function getSearchText(): ?string
    {
        return $this->search_text;
    }

    /**
     * Sets search_text
     * @param ?string $search_text 
     *
     * @return self
     */
    public function setSearchText(?string $search_text): self
    {
        $this->search_text = $search_text;
        return $this;
    }
    /**
      * $start_position 
      * @var ?string
      */
    protected ?string $start_position = null;

    /**
     * Gets start_position
     *
     * @return ?string
     */
    public function getStartPosition(): ?string
    {
        return $this->start_position;
    }

    /**
     * Sets start_position
     * @param ?string $start_position 
     *
     * @return self
     */
    public function setStartPosition(?string $start_position): self
    {
        $this->start_position = $start_position;
        return $this;
    }
    /**
      * $status The list of current statuses to include in the response. By default, all envelopes found are returned. If values are specified, then of the envelopes found, only those with the current status specified are returned in the results.   Possible values are: Voided, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.
      * @var ?string
      */
    protected ?string $status = null;

    /**
     * Gets status
     *
     * @return ?string
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets status
     * @param ?string $status The list of current statuses to include in the response. By default, all envelopes found are returned. If values are specified, then of the envelopes found, only those with the current status specified are returned in the results.   Possible values are: Voided, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.
     *
     * @return self
     */
    public function setStatus(?string $status): self
    {
        $this->status = $status;
        return $this;
    }
    /**
      * $to_date Optional date/time setting that specifies the date/time when the request stops for status changes for envelopes in the account. If no entry, the system uses the time of the call as the `to_date`.
      * @var ?string
      */
    protected ?string $to_date = null;

    /**
     * Gets to_date
     *
     * @return ?string
     */
    public function getToDate(): ?string
    {
        return $this->to_date;
    }

    /**
     * Sets to_date
     * @param ?string $to_date Optional date/time setting that specifies the date/time when the request stops for status changes for envelopes in the account. If no entry, the system uses the time of the call as the `to_date`.
     *
     * @return self
     */
    public function setToDate(?string $to_date): self
    {
        $this->to_date = $to_date;
        return $this;
    }
    /**
      * $transaction_ids If included in the query string, this is a comma separated list of envelope `transactionId`s.   If included in the `request_body`, this is a list of envelope `transactionId`s.   ###### Note: `transactionId`s are only valid in the DocuSign system for seven days.
      * @var ?string
      */
    protected ?string $transaction_ids = null;

    /**
     * Gets transaction_ids
     *
     * @return ?string
     */
    public function getTransactionIds(): ?string
    {
        return $this->transaction_ids;
    }

    /**
     * Sets transaction_ids
     * @param ?string $transaction_ids If included in the query string, this is a comma separated list of envelope `transactionId`s.   If included in the `request_body`, this is a list of envelope `transactionId`s.   ###### Note: `transactionId`s are only valid in the DocuSign system for seven days.
     *
     * @return self
     */
    public function setTransactionIds(?string $transaction_ids): self
    {
        $this->transaction_ids = $transaction_ids;
        return $this;
    }
    /**
      * $user_filter 
      * @var ?string
      */
    protected ?string $user_filter = null;

    /**
     * Gets user_filter
     *
     * @return ?string
     */
    public function getUserFilter(): ?string
    {
        return $this->user_filter;
    }

    /**
     * Sets user_filter
     * @param ?string $user_filter 
     *
     * @return self
     */
    public function setUserFilter(?string $user_filter): self
    {
        $this->user_filter = $user_filter;
        return $this;
    }
    /**
      * $user_id 
      * @var ?string
      */
    protected ?string $user_id = null;

    /**
     * Gets user_id
     *
     * @return ?string
     */
    public function getUserId(): ?string
    {
        return $this->user_id;
    }

    /**
     * Sets user_id
     * @param ?string $user_id 
     *
     * @return self
     */
    public function setUserId(?string $user_id): self
    {
        $this->user_id = $user_id;
        return $this;
    }
    /**
      * $user_name 
      * @var ?string
      */
    protected ?string $user_name = null;

    /**
     * Gets user_name
     *
     * @return ?string
     */
    public function getUserName(): ?string
    {
        return $this->user_name;
    }

    /**
     * Sets user_name
     * @param ?string $user_name 
     *
     * @return self
     */
    public function setUserName(?string $user_name): self
    {
        $this->user_name = $user_name;
        return $this;
    }
}
