<?php

declare(strict_types=1);

/**
 * EnvelopesApiGetDocumentOptions.
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  DocuSign\eSign
 * @author   Swagger Codegen team <apihelp@docusign.com>
 * @license  The DocuSign eSignature Ruby Client SDK is licensed under the MIT License.
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2.1
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DocuSign\eSign\Api\Options;


/**
 * EnvelopesApiGetDocumentOptions Class Doc Comment
 *
 * @category Class
 * @package  DocuSign\eSign
 * @author   Swagger Codegen team <apihelp@docusign.com>
 * @license  The DocuSign eSignature Ruby Client SDK is licensed under the MIT License.
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EnvelopesApiGetDocumentOptions
{
    /**
      * $certificate When set to **false**, the envelope signing certificate is removed from the download.
      * @var ?string
      */
    protected ?string $certificate = null;

    /**
     * Gets certificate
     *
     * @return ?string
     */
    public function getCertificate(): ?string
    {
        return $this->certificate;
    }

    /**
     * Sets certificate
     * @param ?string $certificate When set to **false**, the envelope signing certificate is removed from the download.
     *
     * @return self
     */
    public function setCertificate(?string $certificate): self
    {
        $this->certificate = $certificate;
        return $this;
    }
    /**
      * $documents_by_userid 
      * @var ?string
      */
    protected ?string $documents_by_userid = null;

    /**
     * Gets documents_by_userid
     *
     * @return ?string
     */
    public function getDocumentsByUserid(): ?string
    {
        return $this->documents_by_userid;
    }

    /**
     * Sets documents_by_userid
     * @param ?string $documents_by_userid 
     *
     * @return self
     */
    public function setDocumentsByUserid(?string $documents_by_userid): self
    {
        $this->documents_by_userid = $documents_by_userid;
        return $this;
    }
    /**
      * $encoding 
      * @var ?string
      */
    protected ?string $encoding = null;

    /**
     * Gets encoding
     *
     * @return ?string
     */
    public function getEncoding(): ?string
    {
        return $this->encoding;
    }

    /**
     * Sets encoding
     * @param ?string $encoding 
     *
     * @return self
     */
    public function setEncoding(?string $encoding): self
    {
        $this->encoding = $encoding;
        return $this;
    }
    /**
      * $encrypt When set to **true**, the PDF bytes returned in the response are encrypted for all the key managers configured on your DocuSign account. The documents can be decrypted with the KeyManager Decrypt Document API.
      * @var ?string
      */
    protected ?string $encrypt = null;

    /**
     * Gets encrypt
     *
     * @return ?string
     */
    public function getEncrypt(): ?string
    {
        return $this->encrypt;
    }

    /**
     * Sets encrypt
     * @param ?string $encrypt When set to **true**, the PDF bytes returned in the response are encrypted for all the key managers configured on your DocuSign account. The documents can be decrypted with the KeyManager Decrypt Document API.
     *
     * @return self
     */
    public function setEncrypt(?string $encrypt): self
    {
        $this->encrypt = $encrypt;
        return $this;
    }
    /**
      * $language Specifies the language for the Certificate of Completion in the response. The supported languages, with the language value shown in parenthesis, are: Chinese Simplified (zh_CN), , Chinese Traditional (zh_TW), Dutch (nl), English US (en), French (fr), German (de), Italian (it), Japanese (ja), Korean (ko), Portuguese (pt), Portuguese (Brazil) (pt_BR), Russian (ru), Spanish (es).
      * @var ?string
      */
    protected ?string $language = null;

    /**
     * Gets language
     *
     * @return ?string
     */
    public function getLanguage(): ?string
    {
        return $this->language;
    }

    /**
     * Sets language
     * @param ?string $language Specifies the language for the Certificate of Completion in the response. The supported languages, with the language value shown in parenthesis, are: Chinese Simplified (zh_CN), , Chinese Traditional (zh_TW), Dutch (nl), English US (en), French (fr), German (de), Italian (it), Japanese (ja), Korean (ko), Portuguese (pt), Portuguese (Brazil) (pt_BR), Russian (ru), Spanish (es).
     *
     * @return self
     */
    public function setLanguage(?string $language): self
    {
        $this->language = $language;
        return $this;
    }
    /**
      * $recipient_id 
      * @var ?string
      */
    protected ?string $recipient_id = null;

    /**
     * Gets recipient_id
     *
     * @return ?string
     */
    public function getRecipientId(): ?string
    {
        return $this->recipient_id;
    }

    /**
     * Sets recipient_id
     * @param ?string $recipient_id 
     *
     * @return self
     */
    public function setRecipientId(?string $recipient_id): self
    {
        $this->recipient_id = $recipient_id;
        return $this;
    }
    /**
      * $shared_user_id 
      * @var ?string
      */
    protected ?string $shared_user_id = null;

    /**
     * Gets shared_user_id
     *
     * @return ?string
     */
    public function getSharedUserId(): ?string
    {
        return $this->shared_user_id;
    }

    /**
     * Sets shared_user_id
     * @param ?string $shared_user_id 
     *
     * @return self
     */
    public function setSharedUserId(?string $shared_user_id): self
    {
        $this->shared_user_id = $shared_user_id;
        return $this;
    }
    /**
      * $show_changes When set to **true**, any changed fields for the returned PDF are highlighted in yellow and optional signatures or initials outlined in red.
      * @var ?string
      */
    protected ?string $show_changes = null;

    /**
     * Gets show_changes
     *
     * @return ?string
     */
    public function getShowChanges(): ?string
    {
        return $this->show_changes;
    }

    /**
     * Sets show_changes
     * @param ?string $show_changes When set to **true**, any changed fields for the returned PDF are highlighted in yellow and optional signatures or initials outlined in red.
     *
     * @return self
     */
    public function setShowChanges(?string $show_changes): self
    {
        $this->show_changes = $show_changes;
        return $this;
    }
    /**
      * $watermark When set to **true**, the account has the watermark feature enabled, and the envelope is not complete, the watermark for the account is added to the PDF documents. This option can remove the watermark.
      * @var ?string
      */
    protected ?string $watermark = null;

    /**
     * Gets watermark
     *
     * @return ?string
     */
    public function getWatermark(): ?string
    {
        return $this->watermark;
    }

    /**
     * Sets watermark
     * @param ?string $watermark When set to **true**, the account has the watermark feature enabled, and the envelope is not complete, the watermark for the account is added to the PDF documents. This option can remove the watermark.
     *
     * @return self
     */
    public function setWatermark(?string $watermark): self
    {
        $this->watermark = $watermark;
        return $this;
    }
}
